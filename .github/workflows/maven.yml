# Simple workflow to build JAva project with Maven
name: Java CI with Maven in Linux

on:
   push: null
   pull_request: null

jobs:
   build:
      runs-on: ubuntu-22.04
      env:
        workdir: iotsystem
      
      steps:
      - uses: actions/checkout@v2
        with:
          # Shallow clones should be disabled for a better relevancy of SonarQube analysis
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2
            ~/.sonar/cache
          key: ${{ runner. os }}-m2-${{ hashFiles('**/pom.xml', '**/*.yml') }}
          restore-keys: ${{ runner.os }}-m2-
      - name: Build with Maven
        run: >
          xvfb-run mvn verify -Pcoveralls,pit sonar:sonar
          -DrepoToken=$COVERALLS_TOKEN -DpullRequest=${{ github.event.pull_request.number }}
          -Dsonar.organization=$SONAR_ORG -Dsonar.host.url=$SONAR_HOST -Dsonar.projectKey=$SONAR_PKEY    
        working-directory: ${{ env.workdir }}
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PKEY: fabian57fabian_iot-systems-manager
          SONAR_HOST: https://sonarcloud.io
          SONAR_ORG: fabian57fabian
      - name: Generate JUnit Report
        run: mvn surefire-report:report-only surefire-report:failsafe-report-only site:site -DgenerateReports=false
        working-directory: ${{ env.workdir }}
        if: ${{ always() }}
      - name: Archive JUnit Report
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: reports
          path: |
            **/target/site
            **/target/pit-reports
