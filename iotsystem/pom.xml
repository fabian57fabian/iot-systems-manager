<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.fabian57fabian.app</groupId>
	<artifactId>iotsystem</artifactId>
	<version>0.2-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>iotsystem</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Change the Java compilation level to 8 -->
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<!-- Dependencies versions -->
		<junit.version>4.13</junit.version>
		<mockito.version>4.0.0</mockito.version>
		<assertj-swing.version>3.17.1</assertj-swing.version>
		<log4j.version>2.13.0</log4j.version>
		<mongodb.version>3.12.7</mongodb.version>
		<logback.version>1.2.3</logback.version>
		<mongo-server.version>1.11.1</mongo-server.version>
		<testcontainers.version>1.15.1</testcontainers.version>
		<picocli.version>4.6.1</picocli.version>

		<!-- Plugins versions -->
		<build-helper.version>3.0.0</build-helper.version>
		<failsafe.version>2.22.1</failsafe.version>
		<surefire-report.version>2.22.2</surefire-report.version>
		<site.version>3.9.1</site.version>
		<jacoco.version>0.8.6</jacoco.version>
		<coveralls.version>4.3.0</coveralls.version>
		<jaxb-api.version>2.3.1</jaxb-api.version>
		<pitest.version>1.7.2</pitest.version>
		<sonar.version>3.9.0.2155</sonar.version>

		<sonar.coverage.exclusions>
			**/entities/*.*,
			**/app/swing/*.*
		</sonar.coverage.exclusions>

		<!-- For each rule to be ignore, add another eXX and two corresponding
		properties with eXX in the name as below -->
		<sonar.issue.ignore.multicriteria>e11,e12</sonar.issue.ignore.multicriteria>
		<!-- Disable rule for "Inheritance tree of classes should not be too
		deep" (just an example) -->
		<sonar.issue.ignore.multicriteria.e11.ruleKey>
			java:S110
		</sonar.issue.ignore.multicriteria.e11.ruleKey>
		<sonar.issue.ignore.multicriteria.e11.resourceKey>
			**/*.java
		</sonar.issue.ignore.multicriteria.e11.resourceKey>

		<!-- Disable rule for "Local variable and method parameter names should
		comply with a naming convention" (just an example) -->
		<sonar.issue.ignore.multicriteria.e12.ruleKey>
			java:S117
		</sonar.issue.ignore.multicriteria.e12.ruleKey>
		<sonar.issue.ignore.multicriteria.e12.resourceKey>
			**/IotSwingView.java
		</sonar.issue.ignore.multicriteria.e12.resourceKey>

		<sonar.junit.reportPaths>
			${project.build.directory}/surefire-reports,
			${project.build.directory}/failsafe-reports
		</sonar.junit.reportPaths>
	</properties>

	<build>

		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${build-helper.version}</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
								<source>src/e2e/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${failsafe.version}</version>
				<executions>
					<execution>
						<id>default-it</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
					<execution>
						<id>e2e-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>**/*IT.java</exclude>
							</excludes>
							<includes>
								<include>**/*E2E.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${surefire-report.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>${site.version}</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>prepare-agent</goal>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<excludes>
							<exclude>**/app/swing/*.*</exclude>
							<exclude>**/entities/*.*</exclude>
						</excludes>
					</configuration>

				</plugin>
				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>${coveralls.version}</version>
					<executions>
						<execution>
							<phase>verify</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<!-- Required on JDK 9+ -->
						<dependency>
							<groupId>javax.xml.bind</groupId>
							<artifactId>jaxb-api</artifactId>
							<version>${jaxb-api.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>${pitest.version}</version>
					<configuration>
						<excludedClasses>
							<param>com.fabian57fabian.app.model.entities.*</param>
							<param>com.fabian57fabian.ui.swing.*</param>
							<param>com.fabian57fabian.ui.view.*</param>
						</excludedClasses>
						<targetTests>
							<param>com.fabian57fabian.app.*</param>
						</targetTests>
						<excludedTestClasses>
							<param>**/*IT</param>
							<param>**/*E2E</param>
						</excludedTestClasses>
						<mutators>
							<mutator>DEFAULTS</mutator>
						</mutators>
						<mutationThreshold>80</mutationThreshold>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<!-- Profiles configurations -->
	<profiles>
		<!-- Configuration of Jacoco locally plugin  -->
		<profile>
			<id>jacoco</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Configuration of Coveralls plugin  -->
		<profile>
			<id>coveralls</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.eluder.coveralls</groupId>
						<artifactId>coveralls-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Configuration of PIT plugin  -->
		<profile>
			<id>pit</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>mutationCoverage</goal>
								</goals>
								<phase>verify</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-swing-junit</artifactId>
			<version>${assertj-swing.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>${mongodb.version}</version>
		</dependency>
		<dependency>
			<!-- required to see Mongo Java Driver logs -->
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>de.bwaldvogel</groupId>
			<artifactId>mongo-java-server</artifactId>
			<version>${mongo-server.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>${picocli.version}</version>
		</dependency>
	</dependencies>
</project>
